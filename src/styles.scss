@use '@angular/material' as mat;
@use './app-theme';

@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/variables-dark";
@import "bootstrap/scss/mixins";
@import "bootstrap/scss/maps";
@import "bootstrap/scss/utilities";

@import "bootstrap/scss/containers";
@import "bootstrap/scss/grid";
@import "bootstrap/scss/utilities/api";

html, body, .full-height {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Include material core styles.
@include mat.core();
@include mat.typography-hierarchy(mat.define-typography-config());

$primary: mat.define-palette(mat.$purple-palette);
$accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
$theme: mat.define-dark-theme((
  color: (
    primary: $primary,
    accent: $accent
  ),
  typography: mat.define-typography-config(),
));

@include mat.all-component-themes($theme);
@include app-theme.theme($theme);
@include app-theme.theme-dark($theme);

.snackbar-error {
  --mdc-snackbar-supporting-text-color: white !important;
  --mat-snack-bar-button-color: white !important;
  --mdc-snackbar-container-color: #f44336 !important;
}

router-outlet + * {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.app-content {
  @extend #{".container", ".flex-grow-1", ".d-flex", ".flex-column", ".align-items-center", ".justify-content-center", ".px-3", ".py-5"};
  width: calc(100% - 2rem);
}

.filler {
  flex-grow: 1;
  flex-basis: 0;
}

@media (max-width: 768px) {
  .mat-headline-2 {
    font-size: 40px;
  }

  .mat-headline-5 {
    font-size: 20px;
  }
}

.icon-large {
  font-size: 64px !important;
  width: 64px !important;
  height: 64px !important;
}

.file-over {
  animation: shake 1.5s;
  animation-iteration-count: infinite;
}

@keyframes shake {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }

  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }

  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }

  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }

  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }

  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }

  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }

  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }

  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }

  90% {
    transform: translate(1px, 2px) rotate(-1deg);
  }

  100% {
    transform: translate(1px, 1px) rotate(0deg);
  }
}
